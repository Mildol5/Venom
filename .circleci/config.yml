---
version: 2.1
commands:
  debian-install-deps:
    steps:
      - run:
          name: Install dependencies
          command: apt-get -qq update
            && apt-get -qq install -y
              clang
              cmake
              libconfig-dev
              libgtest-dev
              libopus-dev
              libsodium-dev
              libvpx-dev
              pkg-config
              libgee-0.8-dev
              libgspell-1-dev
              libgtk-3-dev
              libjson-glib-dev
              libsoup2.4-dev
              libsqlcipher-dev
              libcanberra-dev
              libgstreamer1.0-dev
              libgstreamer-plugins-base1.0-dev
              valac
              python3-pip
              wget
      - run:
          name: Install meson
          command: pip3 install meson ninja
  fedora-install-deps:
    steps:
      - run:
          name: Install dependencies
          command: dnf install -y
              clang
              make
              cmake
              libconfig-devel
              gtest-devel
              opus-devel
              libsodium-devel
              libvpx-devel
              pkgconfig
              libgee-devel
              gspell-devel
              gtk3-devel
              json-glib-devel
              libsoup-devel
              sqlcipher-devel
              libcanberra-devel
              gstreamer1-devel
              gstreamer1-plugins-base-devel
              vala
              python3-pip
              wget
      - run:
          name: Install meson
          command: pip3 install meson ninja
  bootstrap-vala:
    steps:
      - run:
          name: Bootstrap vala
          command: |
            apt-get -qq remove -y valac
            apt-get -qq install -y flex bison
            wget https://download.gnome.org/sources/vala/0.43/vala-0.43.6.tar.xz
            tar -xJf vala-0.43.6.tar.xz
            cd vala-0.43.6
            ./configure --prefix=/usr --disable-valadoc
            make
            make install
            cd ..
  install-toxcore:
    steps:
      - run:
          name: Build and install toxcore
          command: |
            wget "https://github.com/TokTok/c-toxcore/archive/v0.2.9.tar.gz"
            tar -xzf v0.2.9.tar.gz
            cd c-toxcore-0.2.9
            cmake -DCMAKE_INSTALL_PREFIX=/usr
            make
            make install
            cd ..
  install-venom:
    steps:
      - run:
          name: Configure
          command: meson build
      - run:
          name: Build
          command: ninja -C build
      - run:
          name: Test
          command: ninja -C build test
      - run:
          name: Install
          command: ninja -C build install
jobs:
  "Ubuntu 18-04":
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - debian-install-deps
      - install-toxcore
      - install-venom
  "Ubuntu 18-10":
    docker:
      - image: ubuntu:18.10
    steps:
      - checkout
      - debian-install-deps
      - install-toxcore
      - install-venom
  "Debian 9":
    docker:
      - image: debian:stretch
    steps:
      - checkout
      - debian-install-deps
      - bootstrap-vala
      - install-toxcore
      - install-venom
  "Debian 10":
    docker:
      - image: debian:buster
    steps:
      - checkout
      - debian-install-deps
      - install-toxcore
      - install-venom
  "Fedora 28":
    docker:
      - image: fedora:28
    steps:
      - checkout
      - fedora-install-deps
      - install-toxcore
      - install-venom
  "Fedora 29":
    docker:
      - image: fedora:29
    steps:
      - checkout
      - fedora-install-deps
      - install-toxcore
      - install-venom
  "Flatpak":
    machine: true
    steps:
      - checkout
      - run:
          name: Start docker
          command: docker run --privileged=true --name image -it -d --volume "$(pwd)":/opt/venom --workdir /opt/venom ubuntu:18.04
      - run:
          name: Install dependencies
          command: |
            docker exec image apt-get -qq update
            docker exec image apt-get -qq install software-properties-common > /dev/null
            docker exec image add-apt-repository ppa:alexlarsson/flatpak
            docker exec image apt-get -qq update
            docker exec image apt-get -qq install -y flatpak-builder > /dev/null
      - run:
          name: Install flatpak dependencies
          command: |
            docker exec image flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
            docker exec image flatpak install -y flathub org.gnome.Sdk//3.28
            docker exec image flatpak install -y flathub org.gnome.Platform//3.28
      - restore_cache:
          key: builder-cache
          paths:
          - .flatpak-builder
      - run:
          name: Build flatpak manifest dependencies
          command: docker exec image flatpak-builder --stop-at=venom --repo=repo app com.github.naxuroqa.venom.yml
      - save_cache:
          key: builder-cache
          paths:
          - .flatpak-builder
      - run:
          name: Build flatpak bundle
          command: |
            docker exec image flatpak build app meson --prefix=/app _build
            docker exec image flatpak build app ninja -C _build install
            docker exec image flatpak-builder --finish-only --repo=repo app com.github.naxuroqa.venom.yml
            docker exec image flatpak build-bundle repo "com.github.naxuroqa.venom-debug-build-${CIRCLE_BUILD_NUM}.x86_64.flatpak" --runtime-repo=https://dl.flathub.org/repo/flathub.flatpakrepo com.github.naxuroqa.venom
      - run:
          name: Prepare artifacts
          command: |
            mkdir flatpak-artifact
            mv "com.github.naxuroqa.venom-debug-build-${CIRCLE_BUILD_NUM}.x86_64.flatpak" flatpak-artifact
      - store_artifacts:
          path: flatpak-artifact
          destination: artifacts
workflows:
  version: 2
  build:
    jobs:
      - "Ubuntu 18-04"
      - "Ubuntu 18-10"
      - "Debian 9"
      - "Debian 10"
      - "Fedora 28"
      - "Fedora 29"
      - "Flatpak"
